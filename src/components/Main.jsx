import {React, useEffect, useState} from "react";
import Coding from "./Coding";
import Verilog from "./Verilog";
import InlineSVG from 'svg-inline-react';
import Loader from "react-loader-spinner";
import "../assets/css/main.css";
import "../assets/css/noscript.css";
import "react-loader-spinner/dist/loader/css/react-spinner-loader.css";
const defaultImg = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="816" height="1056"><!--Generated by Aspose.Words for .NET 21.6.0--><defs></defs><g><rect x="0" y="0" width="816" height="1056" style="fill: #ffffff; stroke: #000000; stroke-width: 1.333333373"></rect><g transform="translate(96,96)"><g><g><text><tspan x="0" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">synthesis</tspan><tspan x="75.611999512" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000"> </tspan><tspan x="84.013328552" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">error</tspan></text></g><g transform="translate(0,15.86000061)"><text><tspan x="0" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">please</tspan><tspan x="50.408000946" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000"> </tspan><tspan x="58.809329987" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">check</tspan><tspan x="100.816001892" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000"> </tspan><tspan x="109.217338562" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">the</tspan><tspan x="134.421340942" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000"> </tspan><tspan x="142.822662354" y="11.655999184" font-family="Courier New" font-weight="normal" font-style="normal" font-size="14" fill="#000000">syntax</tspan></text></g></g></g></g></svg>';


const Main = (props) => {
    const [result, setResult] = useState(defaultImg);
    const [loading, setLoading] = useState(true);
    const [loginId, setLoginId] = useState(Math.random().toString(36).substring(7));
    const [curTab, setCurTab] = useState('Coding');
    useEffect(()=> {
        console.log(result);
    }, [result])
    
    useEffect(()=> {
        let i, tabLinks, tabContents;
        tabContents = document.getElementsByClassName('tabContent');
        for (i = 0; i < tabContents.length; i++) {
            tabContents[i].style.display = "none";
        }
        
        tabLinks = document.getElementsByClassName('tabLinks');
        for (i = 0; i < tabLinks.length; i++) {
            tabLinks[i].style.display = "none";
        }
        let clickedTabContent = curTab + 'Content';
        document.getElementById(clickedTabContent).style.display = "block";
        let clickedTabLink = curTab + 'Link';
        console.log(clickedTabLink);
        document.getElementById(clickedTabLink).classList.add('active');
    }, [curTab]);
    
    useEffect(() => {
        console.log('loading', loading);
        if (loading === false) {
            document.getElementById('resultSvg').style.display = "block";
            document.getElementById('loader').style.display = "none";
        } else {
            document.getElementById('resultSvg').style.display = "none";
            document.getElementById('loader').style.display = "block";
        }
    }, [loading])
    
    const handleLoading = (val) => {
        setLoading(val);
    }

    return (
        <div>
            <div id="wrapper" className="fade-in">
            {/* Header */}
                <div id="intro">
                    <h1>This is <br/>
                    Logic Diagram Generator</h1>
                    <p>A project developed by Software Studio Team 14, spring 2021<br />
                    that helps you to draw the logic diagram in a smarter way.</p>
                    <ul className="actions">
                        <li><a href="/#header" className="button icon solid solo fa-arrow-down scrolly">Continue</a></li>
                    </ul>
                </div>

                <div>
                {/* Header */}
                    <header id="header" onClick={()=>setCurTab('Coding')}>
                        <h1 className="logo">Logic Diagram Generator</h1>
                    </header>
                </div>

                <nav id="nav">
                    <ul className="links">
                        <li><a className='tabLink' id='CodingLink' href='/#header' onClick={() => setCurTab('Coding')}>Quick Start</a></li>
                        <li><a className='tabLink' id='VerilogLink' href='/#header' onClick={() => setCurTab('Verilog')}>Verilog Code</a></li>
                        <li><a className='tabLink' id='ResultLink' href='/#header' onClick={() => setCurTab('Result')}>Result Diagram</a></li>
                    </ul>
                </nav>
            {/* Component */}
                <div className='tabContent' id='CodingContent'>
                    <Coding userId={loginId} setLoading={handleLoading} setResult={setResult} setCurTab={setCurTab} />
                </div>
                <div className='tabContent' id='VerilogContent' >
                    <Verilog userid={loginId} setLoading={handleLoading} setResult={setResult} setCurTab={setCurTab} />
                </div>
                <div className='tabContent' id='ResultContent'>
                    <div id="main">
                        <section className="result">
                            <div id='loader'>
                                <Loader
                                    type="Oval"
                                    color="#8a91a8"
                                    height={100}
                                    width={100}
                                />
                            </div>
                            <div id='resultSvg'>
                                <InlineSVG src={result}/>
                            </div>
                        </section>
                    </div>
                </div>
            {/* Footer */}
                <div id="copyright">
                    <ul>
                        <li>Logic Diagram Generator</li>
                        <li>&copy; NTHU</li>
                    </ul>
                </div>
            </div>
        </div>
    );
};

export default Main;
