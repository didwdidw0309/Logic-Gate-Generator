'use strict';

exports.__esModule = true;
exports.METADATA_PROP_NAME = undefined;

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _reactDisplayName = require('react-display-name');

var _reactDisplayName2 = _interopRequireDefault(_reactDisplayName);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Html = require('./Html');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var METADATA_PROP_NAME = exports.METADATA_PROP_NAME = 'metadata';

function withMetadata() {
    var metadataPropName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : METADATA_PROP_NAME;

    (0, _invariant2.default)(typeof metadataPropName === 'string', 'withMetadata() expects the metadataPropName to be a string. You may be incorrectly invoking withMetadata, correct invocation is \'withMetadata()(Component)\'.');

    return function (Component) {
        var _HOC$contextTypes;

        var HOC = function HOC(props, _ref) {
            var _extends2;

            var htmlMetadata = _ref.htmlMetadata;

            var componentProps = (0, _extends4.default)({}, props, (_extends2 = {}, _extends2[metadataPropName] = htmlMetadata, _extends2));
            return _react2.default.createElement(Component, componentProps);
        };

        HOC.WrappedComponent = Component;

        HOC.contextTypes = (_HOC$contextTypes = {}, _HOC$contextTypes[_Html.METADATA_CONTEXT_KEY] = _propTypes2.default.object, _HOC$contextTypes);

        HOC.displayName = 'withMetadata(' + (0, _reactDisplayName2.default)(Component) + ')';

        return (0, _hoistNonReactStatics2.default)(HOC, Component);
    };
}

exports.default = withMetadata;