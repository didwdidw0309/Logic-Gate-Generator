'use strict';

exports.__esModule = true;
exports.METADATA_CONTEXT_KEY = undefined;

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Html$childContextTyp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _Metadata = require('./Metadata');

var _Metadata2 = _interopRequireDefault(_Metadata);

var _HtmlTag = require('./HtmlTag');

var _HtmlTag2 = _interopRequireDefault(_HtmlTag);

var _HeadTag = require('./HeadTag');

var _HeadTag2 = _interopRequireDefault(_HeadTag);

var _BodyTag = require('./BodyTag');

var _BodyTag2 = _interopRequireDefault(_BodyTag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var METADATA_CONTEXT_KEY = exports.METADATA_CONTEXT_KEY = 'htmlMetadata';

var Html = function (_Component) {
    (0, _inherits3.default)(Html, _Component);

    function Html(props, context) {
        (0, _classCallCheck3.default)(this, Html);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        var metadata = props.metadata;

        if (typeof metadata !== 'undefined' && metadata.isHydratingClient()) {
            (0, _invariant2.default)(metadata instanceof _Metadata2.default, 'Html expects prop \'metadata\' to be an instance of \'Metadata\'.');
            metadata.markHydrated();
        }

        var self = _this;
        var mdInstance = metadata || _Metadata2.default.createNew();
        var unsubscribe = mdInstance.onChange(function notify() {
            self.setState({ metadata: mdInstance });
        });

        self.state = {
            metadata: mdInstance,
            unsubscribe: unsubscribe
        };
        return _this;
    }

    Html.prototype.getChildContext = function getChildContext() {
        var _ref;

        return _ref = {}, _ref[METADATA_CONTEXT_KEY] = this.state.metadata, _ref;
    };

    Html.prototype.componentDidMount = function componentDidMount() {
        this.state.metadata.isMounted();
    };

    Html.prototype.componentWillUnmount = function componentWillUnmount() {
        this.state.unsubscribe();
    };

    Html.prototype.render = function render() {
        var metadata = this.state.metadata;
        var _props = this.props,
            render = _props.render,
            renderProps = (0, _objectWithoutProperties3.default)(_props, ['render']);

        return render(metadata.getComponents(), renderProps);
    };

    return Html;
}(_react.Component);

Html.defaultProps = {
    lastChild: null,

    /**
     * Custom render method allows caching of the <head> data.
     * @param metadata
     * @param props
     */
    render: function render(metadata, props) {
        var lastChild = props.lastChild,
            children = props.children;
        var htmlAttributes = metadata.htmlAttributes,
            bodyAttributes = metadata.bodyAttributes,
            headMetadata = (0, _objectWithoutProperties3.default)(metadata, ['htmlAttributes', 'bodyAttributes']);

        return (0, _jsx3.default)(_HtmlTag2.default, {
            htmlAttributes: htmlAttributes
        }, void 0, (0, _jsx3.default)(_HeadTag2.default, {
            metadata: headMetadata
        }), (0, _jsx3.default)(_BodyTag2.default, {
            bodyAttributes: bodyAttributes
        }, void 0, children, lastChild));
    }
};
Html.childContextTypes = (_Html$childContextTyp = {}, _Html$childContextTyp[METADATA_CONTEXT_KEY] = _propTypes2.default.object, _Html$childContextTyp);
exports.default = Html;