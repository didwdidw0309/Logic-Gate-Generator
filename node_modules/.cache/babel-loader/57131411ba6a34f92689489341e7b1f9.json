{"ast":null,"code":"var _jsxFileName = \"/home/duckhanson/final/Logic-Gate-Generator/src/components/Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { sendVerilogFile as sendVerilogFileApi, receiveData as receiveDataApi } from '../api/Interface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const {\n    usrId,\n    setLoading,\n    setResult,\n    setCurTab\n  } = props;\n  const [topModule, setTopModule] = useState('');\n  const [subModule, setSubModule] = useState('');\n\n  const handleSubmit = () => {\n    setLoading(true);\n    sendVerilogFileApi(usrId, {\n      topModule,\n      subModule\n    }).then(() => {\n      receiveData();\n      setTopModule('');\n      setSubModule('');\n      setLoading(false);\n      setCurTab('Result');\n    }).catch(err => {\n      console.error('Error getting result', err);\n      setTopModule('');\n      setSubModule('');\n      setLoading(false);\n    });\n  };\n\n  const receiveData = () => {\n    setLoading(true);\n    receiveDataApi(usrId).then(result => {\n      setResult(result);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error getting result', err);\n      setLoading(false);\n    });\n  };\n\n  const handleUploadTopModule = file => {\n    let subModule = document.getElementById('SubModule');\n    let header = document.getElementById('SubModuleHeader');\n    subModule.style.display = 'inline-block';\n    header.style.display = 'block';\n    setTopModule(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post featured\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TopModule or AllinOneFile (only accept verilog file)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"TopModule\",\n          accept: \".v, .vh, .verilog,.vlg\",\n          onChange: e => handleUploadTopModule(e.target.value),\n          value: topModule\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"SubModuleHeader\",\n          children: \"Submodules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"SubModule\",\n          accept: \".v, .vh, .verilog,.vlg\",\n          onChange: e => setSubModule(e.target.value),\n          value: subModule,\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Submit\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            onClick: () => handleSubmit(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"kmDJ7YCDIPd509lNUhDpCfsTF2U=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/duckhanson/final/Logic-Gate-Generator/src/components/Upload.jsx"],"names":["React","useState","Button","sendVerilogFile","sendVerilogFileApi","receiveData","receiveDataApi","Upload","props","usrId","setLoading","setResult","setCurTab","topModule","setTopModule","subModule","setSubModule","handleSubmit","then","catch","err","console","error","result","handleUploadTopModule","file","document","getElementById","header","style","display","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {sendVerilogFile as sendVerilogFileApi, receiveData as receiveDataApi} from '../api/Interface'\n\nconst Upload = (props) => {\n\n    const {usrId, setLoading, setResult, setCurTab} = props;\n    const [topModule, setTopModule] = useState('');\n    const [subModule, setSubModule] = useState('');\n\n    const handleSubmit = () => {\n        setLoading(true);\n        sendVerilogFileApi(usrId, {topModule, subModule}).then(() => {\n            receiveData();\n            setTopModule('');\n            setSubModule('');\n            setLoading(false);\n            setCurTab('Result');\n        }).catch(err => {\n            console.error('Error getting result', err);\n            setTopModule('');\n            setSubModule('');\n            setLoading(false);\n        });\n\n    }\n\n    const receiveData = () => {\n        setLoading(true);\n        receiveDataApi(usrId).then(result => {\n            setResult(result);\n            setLoading(false);\n        }).catch(err => {\n            console.error('Error getting result', err);\n            setLoading(false);\n        })\n    }\n\n    const handleUploadTopModule = (file) => {\n        let subModule = document.getElementById('SubModule');\n        let header = document.getElementById('SubModuleHeader');\n        subModule.style.display = 'inline-block';\n        header.style.display = 'block';\n        setTopModule(file);\n    }\n\n    return (\n        <div>\n            {/* Main */}\n            <div id=\"main\">\n                {/* Here to Upload! */}\n                <article className=\"post featured\">\n                    <h3>TopModule or AllinOneFile (only accept verilog file)</h3>\n                    <input type=\"file\" id=\"TopModule\" accept='.v, .vh, .verilog,.vlg' onChange={(e) => handleUploadTopModule(e.target.value)} value={topModule}></input>\n                    <h3 id=\"SubModuleHeader\">Submodules</h3>\n                    <input type=\"file\" id=\"SubModule\" accept='.v, .vh, .verilog,.vlg' onChange={(e) => setSubModule(e.target.value)} value={subModule} multiple></input>\n                    <h2><br/></h2>\n                    <div className=\"Submit\">\n                        <Button variant=\"outline-dark\" onClick={() => handleSubmit()}>Submit</Button>\n                    </div>\n                </article>\n            </div>\n        </div>\n    );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}