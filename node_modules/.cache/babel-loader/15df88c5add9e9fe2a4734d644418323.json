{"ast":null,"code":"import axios from'axios';// Develop server URL\nvar logicGateBaseUrl='http://localhost:8080/api';// Production server URL\n// const logicGateBaseUrl = \"http://logic-gate-generator.us-east-1.elasticbeanstalk.com/api\";\nexport function sendVerilogText(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var text=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var url=\"\".concat(logicGateBaseUrl,\"/send/verilogText\");console.log(\"Making POST request to: \".concat(url));return axios.post(url,{text:text,id:id}).then(function(res){if(res.status!==200)throw new Error(\"Unexpected response code: \".concat(res.status));return res.data;});}export function sendVerilogFile(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var file=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var url=\"\".concat(logicGateBaseUrl,\"/send/verilogFile\");console.log(\"Making POST request to: \".concat(url));return axios.post(url,{file:file,id:id}).then(function(res){if(res.status!==200)throw new Error(\"Unexpected response code: \".concat(res.status));return res.data;});}export function sendUserDefinedText(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var text=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var url=\"\".concat(logicGateBaseUrl,\"/send/userDefinedText\");console.log(\"Making POST request to: \".concat(url));return axios.post(url,{text:text,id:id}).then(function(res){if(res.status!==200)throw new Error(\"Unexpected response code: \".concat(res.status));return res.data;});}export function receiveData(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var url=\"\".concat(logicGateBaseUrl,\"/receive?id=\").concat(id);console.log(\"Making GET request to: \".concat(url));return axios.get(url).then(function(res){if(res.status!==200)throw new Error(\"Unexpected response code: \".concat(res.status));return res.data;});}","map":{"version":3,"sources":["/home/duckhanson/final/Logic-Gate-Generator/client/src/api/Interface.js"],"names":["axios","logicGateBaseUrl","sendVerilogText","id","text","url","console","log","post","then","res","status","Error","data","sendVerilogFile","file","sendUserDefinedText","receiveData","get"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,2BAAzB,CAEA;AACA;AAEA,MAAO,SAASC,CAAAA,eAAT,EAA4C,IAAnBC,CAAAA,EAAmB,2DAAd,CAAc,IAAXC,CAAAA,IAAW,2DAAJ,EAAI,CAC/C,GAAIC,CAAAA,GAAG,WAAMJ,gBAAN,qBAAP,CAEAK,OAAO,CAACC,GAAR,mCAAuCF,GAAvC,GAEA,MAAOL,CAAAA,KAAK,CAACQ,IAAN,CAAWH,GAAX,CAAgB,CACnBD,IAAI,CAAJA,IADmB,CAEnBD,EAAE,CAAFA,EAFmB,CAAhB,EAGJM,IAHI,CAGC,SAASC,GAAT,CAAc,CAClB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CACI,KAAM,IAAIC,CAAAA,KAAJ,qCAAuCF,GAAG,CAACC,MAA3C,EAAN,CACJ,MAAOD,CAAAA,GAAG,CAACG,IAAX,CACH,CAPM,CAAP,CAQH,CAED,MAAO,SAASC,CAAAA,eAAT,EAA4C,IAAnBX,CAAAA,EAAmB,2DAAd,CAAc,IAAXY,CAAAA,IAAW,2DAAJ,EAAI,CAC/C,GAAIV,CAAAA,GAAG,WAAMJ,gBAAN,qBAAP,CAEAK,OAAO,CAACC,GAAR,mCAAuCF,GAAvC,GAEA,MAAOL,CAAAA,KAAK,CAACQ,IAAN,CAAWH,GAAX,CAAgB,CACnBU,IAAI,CAAJA,IADmB,CAEnBZ,EAAE,CAAFA,EAFmB,CAAhB,EAGJM,IAHI,CAGC,SAASC,GAAT,CAAc,CAClB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CACI,KAAM,IAAIC,CAAAA,KAAJ,qCAAuCF,GAAG,CAACC,MAA3C,EAAN,CACJ,MAAOD,CAAAA,GAAG,CAACG,IAAX,CACH,CAPM,CAAP,CAQH,CAED,MAAO,SAASG,CAAAA,mBAAT,EAAgD,IAAnBb,CAAAA,EAAmB,2DAAd,CAAc,IAAXC,CAAAA,IAAW,2DAAJ,EAAI,CACnD,GAAIC,CAAAA,GAAG,WAAMJ,gBAAN,yBAAP,CAEAK,OAAO,CAACC,GAAR,mCAAuCF,GAAvC,GAEA,MAAOL,CAAAA,KAAK,CAACQ,IAAN,CAAWH,GAAX,CAAgB,CACnBD,IAAI,CAAJA,IADmB,CAEnBD,EAAE,CAAFA,EAFmB,CAAhB,EAGJM,IAHI,CAGC,SAASC,GAAT,CAAc,CAClB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CACI,KAAM,IAAIC,CAAAA,KAAJ,qCAAuCF,GAAG,CAACC,MAA3C,EAAN,CACJ,MAAOD,CAAAA,GAAG,CAACG,IAAX,CACH,CAPM,CAAP,CAQH,CAED,MAAO,SAASI,CAAAA,WAAT,EAA6B,IAARd,CAAAA,EAAQ,2DAAH,CAAG,CAChC,GAAIE,CAAAA,GAAG,WAAMJ,gBAAN,wBAAqCE,EAArC,CAAP,CAEAG,OAAO,CAACC,GAAR,kCAAsCF,GAAtC,GAEA,MAAOL,CAAAA,KAAK,CAACkB,GAAN,CAAUb,GAAV,EAAeI,IAAf,CAAoB,SAASC,GAAT,CAAc,CACrC,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CACI,KAAM,IAAIC,CAAAA,KAAJ,qCAAuCF,GAAG,CAACC,MAA3C,EAAN,CAEJ,MAAOD,CAAAA,GAAG,CAACG,IAAX,CACH,CALM,CAAP,CAMH","sourcesContent":["import axios from 'axios';\n\n// Develop server URL\nconst logicGateBaseUrl = 'http://localhost:8080/api';\n\n// Production server URL\n// const logicGateBaseUrl = \"http://logic-gate-generator.us-east-1.elasticbeanstalk.com/api\";\n\nexport function sendVerilogText(id = 0, text = '') {\n    let url = `${logicGateBaseUrl}/send/verilogText`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, {\n        text,\n        id\n    }).then(function(res) {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n        return res.data;\n    });\n}\n\nexport function sendVerilogFile(id = 0, file = '') {\n    let url = `${logicGateBaseUrl}/send/verilogFile`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, {\n        file,\n        id\n    }).then(function(res) {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n        return res.data;\n    });\n}\n\nexport function sendUserDefinedText(id = 0, text = '') {\n    let url = `${logicGateBaseUrl}/send/userDefinedText`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, {\n        text,\n        id\n    }).then(function(res) {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n        return res.data;\n    });\n}\n\nexport function receiveData(id = 0) {\n    let url = `${logicGateBaseUrl}/receive?id=${id}`;\n    \n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then(function(res) {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n} "]},"metadata":{},"sourceType":"module"}